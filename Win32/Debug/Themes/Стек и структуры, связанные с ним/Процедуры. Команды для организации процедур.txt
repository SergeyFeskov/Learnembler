Определение процедуры
Процедура – участок кода, который может вызываться из различных мест программы.

После выполнения процедуры управление возвращается в точку вызова.
$
CALL
Выполняет вызов процедуры.

Пример:
Call MyProc
...
MyProc:
...
Ret
$
CALL
Принцип работы:
Push ip
Jmp MyProc

Выполняет два действия:
– Помещает в стек значение регистра IP (return address)
– Выполняет безусловный переход по адресу, заданному операндом
$
RET
Выполняет два действия:
– Извлекает из стека значение
– Помещает его в регистр IP

Если есть операнд (необязательный, но всегда imm):
– Извлекает из стека значение (адрес возврата)
– Извлекает из стека N байт (N-операнд). Фактически просто увеличивает значение SP
– Помещает в регистр IP адрес возврата
$
Соглашение вызова
Важно, чтобы обе стороны соблюдали одно и то же соглашение вызова:
– Способ передачи параметров
– Способ возврата значений
– Правила использования регистров
– И т.д.
$
Передача параметров
– через регистры
– через память (глобальные переменные)
– через стек
$
Возврат значений
– через память (глобальные переменные)
– через стек
– через регистры
$
Дальний вызов процедуры
Дальний вызов – вызов, при котором вызывающая и вызываемая процедуры могут находиться в разных сегментах (far call, intersegment call).
$
Дальний вызов процедуры
Для выполнения дальнего вызова используется инструкция CALL с директивой far: 
CALL far SegName:Proc

Выполняет два действия:
– помещает в стек значения регистров CS:IP
– выполняет безусловный переход по адресу, заданному операндом
$
Дальний вызов процедуры
Дальний возврат осуществляется инструкцией RETF.

RETF выполняет два действия:
– извлекает из стека 2 значения
– помещает их в регистры CS:IP
$
Дальний вызов процедуры
Если у RETF есть операнд (необязательный):
– извлекает из стека адрес возврата
– извлекает из стека N байт (N-операнд). Фактически просто увеличивает значение SP
– помещает в CS:IP полный адрес возврата
$
Дальний вызов процедуры
Пример дальнего вызова:
format MZ
entry Main:Start
segment Main
Start:
call far Library:MyProc
Segment Library
MyProc:
...
retf