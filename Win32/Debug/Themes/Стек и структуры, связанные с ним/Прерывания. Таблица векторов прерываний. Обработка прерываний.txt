Определение прерывания, обработчик прерывания, виды прерываний
Прерывание – инициируемый определённым образом процесс, временно переключающий процессор на выполнение другой программы с последующим возобновлением выполнения прерванной программы.

Обработчик прерывания (ISR = Interrupt Service Routine) – программа, которой передаётся управление при возникновении прерывания.

Существует два вида прерываний:
– Аппаратные;
– Программные.
$
IVT
В процессорах Intel предусмотрено 256 номеров прерываний, из них 0-31 (0-1F) номера зарезервированы, остальные доступны для программистов.

IVT = Interrupt Vector Table:
– Находится по адресу 0000:0000;
– Представляет собой массив полных адресов обработчиков прерываний;
– 2 байта – смещение;
– 2 байта – сегмент;
- Индекс в массиве – номер прерывания.
$
IVT
В Protected mode вместо IVT используется IDT = Interrupt Descriptor Table.
$
Причины возникновения прерываний
Прерывания могут возникать при:
– Выполнении недопустимой команды;
– Деление на 0;
– Обращении к несуществующей инструкции;
– Использовании программной команды int;
– и т.п.
$
Инструкция INT
Синтаксис: INT ОПЕРАНД

Вызывает обработчик прерываний с заданным в операнде номером.
$
Инструкция INT
Допустим вызываем int 99h:
– Сначала в стек помещается значение регистра флагов;
– Процессор обращается к IVT по смещению 99h*4 в сегменте 0000 и берёт оттуда 4 байта, используя их как адрес для дальнего перехода;
– Происходит дальний переход, на стек кладётся старое значение CS и старое значение IP, а в CS:IP записывается то, что было по адресу 0000:99h*4.
$
Инструкция INT
Т.е. использование INT напоминает процедуру с дальним вызовом, но программист не указывает адрес, на который нужно перейти, а указывает номер прерывания, говоря, что нужно найти обработчик этого прерывания с последующей передачей туда управления.
$
Инструкция INT
Почему сохраняются флаги? Бывают же еще и аппаратные прерывания, которые происходят в совершенно произвольное время относительно выпол-нения программы, и они могут изменить регистр флагов, например, перед условным переходом.

Помимо сохранения FLAGS и CS:IP при вызове обработчика прерывания флаг IF устанавливается в 0 (т.е. если флаг с 0 – обработка прерываний запрещена, а если с 1 - разрешена).
$
Возврат из ISR
Для возврата управления из обработчика прерывания используется команда IRET.
В отличие от RET и RETF всегда без операндов.
IRET возвращает из стека старые значения FLAGS и CS:IP.
$
Аппаратные прерывания
Аппаратные прерывания возникают при поступлении сигналов от внешних устройств.
Номер прерывания выбирается в зависимости от источника сигнала.
Выполнения основной программы приостанавливается.
Выполняются те же операции, что и при использовании команды int.
Процессор гарантирует, что текущая инструкция будет выполненина до передачи управления ISR
Если прерывание аппаратное, обработчик, как правило, должен сохранить значения регистров.
$
Подмена обработчика
Подмена обработчика позволяет включиться в процесс обработки прерывания.
$
Подмена обработчика
Перехват прерывания:
xor 	ax, ax
mov 	es, ax
mov 	cx, segment
mov 	dx, offset
pushf
cli
mov 	[es:intNumber*4], dx
mov 	[es:intNumber*4+2], cx
popf
$
Функции перехвата прерываний в MS-DOS 
Есть функции MS-DOS, позволяющие выполнить перехват прерываний:
– Функция 35h возвращает адрес обработчика;
– Функция 25h заменяет адрес обработчика на заданный (выполняет перехват).

Однако использование этих функций - плохая идея!
$
Принцип обработки прерываний
В зависимости от того, какое прерывание обрабатывается, обработчик может:
– Выполнять всю обработку самостоятельно;
– Вызывать предыдущий обработчик в процессе обработки (в т.ч. после).