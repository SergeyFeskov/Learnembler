Понятие строки
Строка – последовательность (массив) символов.

Строка (как и любой массив) имеет 2 основные характеристики:
– Адрес (где находится?)
– Длина (сколько места занимает?)

Проще всего работать с данными размер которых равен размеру регистра общего назначения.
$
Строковые команды
LODS
STOS
MOVS
SCAS
CMPS
INS
OUTS
$
Строковые команды
Могут работать с данными размеров 1,2,4,8 байт:
'название инструкции'+B/W/D/Q
$
LODS
Загружает элемент из памяти в регистр.
LODSB: mov al, [ds:si]
LODSW: mov ax, [di:si]

Загружает: 
– Всегда в AL/AX
– Всегда из памяти по адресу DS:SI
$
STOS
Записывает элемент из регистра в память.
STOSB: mov [es:di],al
STOSW: mov [es:di], ax

Записывает: 
– Всегда из AL/AX
– Всегда в памяти по адресу ES:DI
$
MOVS
Копирует элементы в памяти.
MOVSB: mov [es:di], [ds:si]
MOVSW: mov [es:di], [ds:si]

Копирует: 
– Всегда из памяти по адресу DS:SI
– Всегда в память по адресу ES:DI
$
SCAS 
SCAS = scan string
Сравнивает значение регистра с элементом в памяти.
SCASB: cmp al, [es:di]
SCASW: cmp ax,[es:di]

Сравнивает:
– Bсегда значение AL\AX
– Всегда с элементом по адресу ES:DI
$
CMPS
Сравнивает значения двух элементов в памяти.
CMPSB: cmp [ds:si], [es:di]
CMPSW: cmp [ds:si], [es:di]

Cравнивает:
– всегда элемент по адресу DS:SI
– всегда с элементом по адресу ES:DI
$
Изменения DI и SI
Кроме копирования/сравнения, все строковые команды изменяют значения регистров SI или DI.

SI/DI изменяются в большую или меньшую сторону в зависимости от флага DF:
- DF=0 - SI/DI увеличивается
- DF=1 - SI/DI уменьшается

Значения изменяются на количество байт, с которыми работает команда.
$
Префиксы повторения
Перед строковыми командами могут указываться префиксы повторения:
– REP
– REPE\REPZ
– REPNE\REPNZ

REP перед LODS, STOS, MOVS.
REPE\REPZ и REPNE/REPNZ перед SCAS,CMPS.
$
Применение строковых команд
С помощью строковых команд можно реализовать работу:
– Со строками
– С массивами скалярных типов